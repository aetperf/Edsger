name: ci-publish  #  Publish Python distribution to PyPI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:

  test:
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-14]
        python-version: ["3.11"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install .
    - name: Testing
      run: |
        python -m pytest tests

  build_source_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build
        run: python -m pip install build

      - name: Run build
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: source-distribution
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-14]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-py${{ matrix.python-version }}-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    needs:
      - test
      - build_source_dist
      - build_wheels
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # Mandatory for trusted publishing

    steps:
    - name: Download all built distributions
      uses: actions/download-artifact@v4
      with:
        path: ./dist/
        merge-multiple: true

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: ./dist/
